/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/knative/eventing-contrib/contrib/alimns/pkg/apis/sources/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AliMnsSourceLister helps list AliMnsSource.
type AliMnsSourceLister interface {
	// List lists all AliMnsSources in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AliMnsSource, err error)
	// AliMnsSources returns an object that can list and get AliMnsSources.
	AliMnsSources(namespace string) AliMnsSourceNamespaceLister
	AliMnsSourceListerExpansion
}

// mnsSourceLister implements the AliMnsSourceLister interface.
type alimnsSourceLister struct {
	indexer cache.Indexer
}

// NewAliMnsSourceLister returns a new AliMnsSourceLister.
func NewAliMnsSourceLister(indexer cache.Indexer) AliMnsSourceLister {
	return &alimnsSourceLister{indexer: indexer}
}

// List lists all AliMnsSources in the indexer.
func (s *alimnsSourceLister) List(selector labels.Selector) (ret []*v1alpha1.AliMnsSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AliMnsSource))
	})
	return ret, err
}

// AliMnsSources returns an object that can list and get AliMnsSources.
func (s *alimnsSourceLister) AliMnsSources(namespace string) AliMnsSourceNamespaceLister {
	return alimnsSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AliMnsSourceNamespaceLister helps list and get AliMnsSources.
type AliMnsSourceNamespaceLister interface {
	// List lists all AliMnsSources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AliMnsSource, err error)
	// Get retrieves the AliMnsSource from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AliMnsSource, error)
	AliMnsSourceNamespaceListerExpansion
}

// mnsSourceNamespaceLister implements the AliMnsSourceNamespaceLister
// interface.
type alimnsSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AliMnsSources in the indexer for a given namespace.
func (s alimnsSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AliMnsSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AliMnsSource))
	})
	return ret, err
}

// Get retrieves the AliMnsSource from the indexer for a given namespace and name.
func (s alimnsSourceNamespaceLister) Get(name string) (*v1alpha1.AliMnsSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("alimnssource"), name)
	}
	return obj.(*v1alpha1.AliMnsSource), nil
}
